待补充：
    关于重载，重写，覆盖的基本概念要分清楚，
    Go中确实是不支持重载的, 官方给出的解释是
        其他语言的经验告诉我们，有各种同名但签名不同的方法有时是有用的，但在实践中也可能令人困惑。关于重载运算符，似乎更方便，但是同样的，没有重载会更简单。
        因此这么设计的目的其实 使Go语言保持简单 这一核心目标
    而关于重写和覆盖，emmm，笔者自己的理解是，毕竟不是真正的继承，而是复合。并且也不能像继承一样用父类定义而使用子类的实例充当具体实现，所以这个问题其实是不存在的？
    毕竟 var cat Pet = new(Cat) 是会报错的。
        